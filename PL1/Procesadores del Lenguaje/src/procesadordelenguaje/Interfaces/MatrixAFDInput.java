/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package procesadordelenguaje.Interfaces;

import com.sun.javafx.scene.control.skin.VirtualFlow;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import procesadordelenguaje.AFD;

/**
 *
 * @author Meusz
 */
public class MatrixAFDInput extends javax.swing.JFrame {

    private final int numberwords;
    private final int lenghtwords;
    private String ER;
    private final CoreMenu Menu;
    private final List<Character> alfabeto;
    private String[] filas, columnas;
    private final HashMap<Integer, HashMap<Character, Integer>> Matriz;
    private AFD afd;

    /**
     * Creates new form MatrixAFDInput
     *
     * @param numberwords
     * @param lenghtwords
     * @param alfabeto
     * @param Menu
     */
    public MatrixAFDInput(int numberwords, int lenghtwords, List<Character> alfabeto, String ER, CoreMenu Menu) {
        this.numberwords = numberwords;
        this.lenghtwords = lenghtwords;
        this.ER = ER;
        this.alfabeto = alfabeto;
        this.Menu = Menu;
        this.Matriz = new HashMap<>();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MatrixInput = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Continue = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Console = new javax.swing.JTextArea();
        Back = new javax.swing.JButton();
        NumberOfSates = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        InitiialState = new javax.swing.JTextField();
        FinalStates = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel1.setText("Now Input your AFD matrix");

        MatrixInput.setColumns(20);
        MatrixInput.setRows(5);
        jScrollPane1.setViewportView(MatrixInput);

        jLabel2.setText("You must only write the filled matrix components. Don't worry about the empty ones, the program will do them for you");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("The way you must write the matrix is \"1 a 3\" whixh means state 1 connects state 3 by a. Use Enter to split the inputs.");

        Continue.setText("Continue");
        Continue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueActionPerformed(evt);
            }
        });

        jLabel4.setText("Console");

        Console.setEditable(false);
        Console.setColumns(20);
        Console.setRows(5);
        jScrollPane2.setViewportView(Console);

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Number of states");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Initial state");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("List Final States");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Continue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FinalStates, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(NumberOfSates)
                                        .addComponent(InitiialState, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)))
                                .addGap(0, 169, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(NumberOfSates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(InitiialState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(FinalStates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Continue)
                        .addGap(18, 18, 18)
                        .addComponent(Back))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinueActionPerformed
        System.out.println(alfabeto);
        try {
            for (int i = 0; i < Integer.parseInt(NumberOfSates.getText()); ++i) {
                Matriz.put(i, new HashMap<>());
            }
            List<Integer> Estados = new ArrayList<>();
            for (int i = 0; i < Integer.parseInt(NumberOfSates.getText()); ++i) {
                Estados.add(i);
            }
            try {
                filas = MatrixInput.getText().split("\n");
                int i = 0;
                boolean centinela = true;
                while (i < filas.length && centinela) {
                    columnas = filas[i].split(" ");
                    if (!Estados.contains(Integer.parseInt(columnas[0])) || !Estados.contains(Integer.parseInt(columnas[2]))) {
                        Console.setText("ERROR: The state value at line " + i + " is not a correct state");
                        centinela = false;
                    } else if (!alfabeto.contains(columnas[1].charAt(0))) {
                        Console.setText("ERROR: The letter value at line " + i + " is not a correct alphabeth letter");
                        centinela = false;
                    } else {

                        Matriz.get(Integer.parseInt(columnas[0])).put(columnas[1].charAt(0), Integer.parseInt(columnas[2]));
                    }
                    i++;
                }
                if (centinela && !Estados.contains(Integer.parseInt(InitiialState.getText()))) {
                    Console.setText("ERROR: Invalid initial state");
                    centinela = false;
                }
                List<Integer> estadosfinales = new ArrayList<>();
                columnas = FinalStates.getText().split(" ");
                i = 0;
                while (i < columnas.length && centinela) {
                    if (!Estados.contains(Integer.parseInt(columnas[i]))) {
                        Console.setText("ERROR: Invalid Final States input. The state " + i + " does not exist");
                        centinela = false;
                    } else {
                        estadosfinales.add(Integer.parseInt(columnas[i]));
                    }

                    i++;
                }

                if (centinela) {
                    AFD afd = new AFD(Integer.parseInt(InitiialState.getText()), Estados, alfabeto, estadosfinales, Matriz);

                    new ME(numberwords, lenghtwords, ER, afd, this).setVisible(true);
                    this.setVisible(false);
                }
            } catch (Exception e) {
                Console.setText("ERROR: There was an error in the matrix input notation. it must e writen like:\n1 a 3\n2 c 4\n1 b 4\n etc");
            }
        } catch (Exception e) {
            Console.setText("ERROR: The number of states must be a numeric value");
        }

    }//GEN-LAST:event_ContinueActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        Menu.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_BackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTextArea Console;
    private javax.swing.JButton Continue;
    private javax.swing.JTextField FinalStates;
    private javax.swing.JTextField InitiialState;
    private javax.swing.JTextArea MatrixInput;
    private javax.swing.JTextField NumberOfSates;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
